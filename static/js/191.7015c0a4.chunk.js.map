{"version":3,"file":"static/js/191.7015c0a4.chunk.js","mappings":"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","sources":["components/FormStyled/FormStyled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Form = styled.form`\n  max-width: 360px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  gap: 8px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: rgba(0, 128, 128, 0.5);\n  border-radius: 10px;\n  padding: 15px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border-radius: 10px;\n  border: none;\n  :hover,\n  :focus {\n    outline: 2px solid teal;\n  }\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  padding: 8px;\n  border-radius: 10px;\n  border: none;\n  font-size: 16px;\n  font-weight: 600;\n  color: #ffffff;\n  line-height: 1.2;\n  background-color: teal;\n  cursor: pointer;\n  :focus,\n  :hover {\n    background-color: rgba(0, 128, 128, 0.8);\n    transform: scale(1.1);\n  }\n`;\n","export const selectFilter = state => state.filter.filter;\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectError = state => state.contacts.error;\nexport const selectLoader = state => state.contacts.isLoading;\nexport const selectFilteredContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state).toLowerCase().trim();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().trim().includes(filter)\n  );\n};\n","import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { Form, Input, Button } from 'components/FormStyled/FormStyled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operation';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\nexport function ContactForm({ onSubmit }) {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const onChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    const found = contacts.find(contact => contact.name === name);\n\n    if (found) {\n      alert(`${name} is already in contact`);\n      return;\n    }\n    const contact = { name, number, id: nanoid() };\n    dispatch(addContact(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmitForm}>\n      <Input\n        onChange={onChange}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name\"\n      />\n      <Input\n        onChange={onChange}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Number\"\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 285px;\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n  max-width: 285px;\n  width: 100%;\n  margin-top: 8px;\n  padding: 8px;\n  border-radius: 8px;\n  border: none;\n  :hover,\n  :focus {\n    outline: 2px solid teal;\n  }\n`;\n//  display: flex;\n//   flex-direction: column;\n//   gap: 16px;\n","import { Label, Input } from './Filter.styled';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeValue } from 'redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handlerChange = event => {\n    dispatch(changeValue(event.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        name=\"filter\"\n        onChange={handlerChange}\n      />\n    </Label>\n  );\n}\nexport default Filter;\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 8px;\n  border: 1px solid teal;\n  border-radius: 10px;\n  align-items: center;\n  justify-content: center;\n  padding: 3px;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  padding: 3px;\n  display: flex;\n\n  margin-left: auto;\n\n  border: none;\n  border-radius: 10px;\n  color: #ffffff;\n  line-height: 1.2;\n  background-color: teal;\n  cursor: pointer;\n  :focus,\n  :hover {\n    background-color: tomato;\n    transform: scale(1.1);\n  }\n`;\n","import { Button, ListItem } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operation';\nimport { useDispatch } from 'react-redux';\nfunction Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n  const handlerDelete = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ListItem>\n      <p>\n        {name}: {number}\n      </p>\n      <Button onClick={handlerDelete}>Delete</Button>\n    </ListItem>\n  );\n}\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default Contact;\n","import { List } from './ContactList.styled';\nimport Contact from './Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nfunction ContactList() {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Contact key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n}\nexport default ContactList;\n","import { ColorRing } from 'react-loader-spinner';\nfunction Loader() {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#008080', '#269393', '#40a0a0', '#80c0c0', '#b3d9d9']}\n    />\n  );\n}\nexport default Loader;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { Section } from 'components//Layout/Layout.style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { Layout } from 'components/Layout/Layout.style';\nimport { selectLoader, selectError } from 'redux/contacts/selectors';\nimport Loader from 'components/Loader/Loader';\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoader);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Layout>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    </Layout>\n  );\n}\nexport default Contacts;\n"],"names":["Form","styled","Input","Button","selectFilter","state","filter","selectContacts","contacts","selectError","error","selectLoader","isLoading","selectFilteredContacts","toLowerCase","trim","contact","name","includes","ContactForm","onSubmit","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","onChange","event","target","value","preventDefault","found","find","alert","id","nanoid","addContact","type","pattern","title","required","placeholder","Label","changeValue","currentTarget","List","ListItem","onClick","deleteContact","filteredContacts","map","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useEffect","fetchContacts"],"sourceRoot":""}